[env]
PROJECT_NAME = "strawchemy"
_.python.venv = { path = ".venv" }

[tasks.install-pre-commit]
description = "Install pre-commit hooks"
run = "pre-commit install --install-hooks 2>&1"

[tasks.install]
description = "Install dependencies"
alias = "i"
run = "uv sync --all-extras --dev"

[tasks.install-lint]
description = "Install dependencies to run lint checks"
run = "uv sync --all-extras --group lint"

[tasks.install-test]
description = "Install dependencies to run tests"
run = "uv sync --all-extras --group test"

[tasks.test-matrix]
description = "Generate CI test matrix"
depends = "install-test"
run = """
    nox --json -t tests -l |
    jq 'map(
        {
        session,
        tags,
        name: "\\( .name ) on \\( .python )\\( if .call_spec != {} then " (\\(.call_spec | to_entries | map("\\(.key)=\\(.value)") | join(", ")))" else "" end )"
        }
    )'
"""

[tasks.test-ci]
description = "Run a single test session"
usage = 'arg "<session>"'
depends = "install-test"
run = 'uv run nox -r -t tests -s {{arg(name="session")}} -- --junitxml=./junit.xml'

[tasks.test]
description = "Run tests"
depends = "install-test"
run = "uv run nox -r -t tests -- --cov-report=term-missing:skip-covered -n=auto"

[tasks.pyright]
description = "Run pyright"
depends = "install-lint"
run = "uv run pyright"
env = { PYRIGHT_PYTHON_PYLANCE_VERSION = "latest-release" }

[tasks.vulture]
description = "Run vulture"
depends = "install-lint"
run = "uv run vulture"

[tasks.ruff]
description = "Check ruff formatting"
run = "ruff format --check"

[tasks.lint]
description = "Lint the code"
depends = ["vulture", "pyright", "ruff"]

[tools]
jq = "latest"
ruff = "latest"
uv = "latest"
