# serializer version: 1
# name: test_query_schemas[nested_overrides]
  '''
  """GraphQL type"""
  type ColorType {
    id: UUID!
    fruitsAggregate: FruitAggregate!
  
    """Fetch objects from the FruitType collection"""
    fruits: [FruitType!]!
    name: Int!
  }
  
  """Aggregation fields"""
  type FruitAggregate {
    avg: FruitNumericFields!
    count: Int
    max: FruitMinMaxFields!
    min: FruitMinMaxFields!
    stddev: FruitNumericFields!
    stddevPop: FruitNumericFields!
    stddevSamp: FruitNumericFields!
    sum: FruitSumFields!
    varPop: FruitNumericFields!
    varSamp: FruitNumericFields!
    variance: FruitNumericFields!
  }
  
  type FruitMinMaxFields {
    name: String
    sweetness: Int
  }
  
  type FruitNumericFields {
    sweetness: Float
  }
  
  type FruitSumFields {
    name: String
    sweetness: Int
  }
  
  """GraphQL type"""
  type FruitType {
    id: UUID!
    name: Int!
    colorId: UUID
    color: ColorType!
    sweetness: Int!
  }
  
  """Aggregation fields"""
  type GroupAggregate {
    count: Int
    max: GroupMinMaxFields!
    min: GroupMinMaxFields!
    sum: GroupSumFields!
  }
  
  type GroupMinMaxFields {
    name: String
  }
  
  type GroupSumFields {
    name: String
  }
  
  """GraphQL type"""
  type GroupType {
    name: Int!
    id: UUID!
    tagId: UUID!
    tag: TagType!
    usersAggregate: UserAggregate!
  
    """Fetch objects from the UserType collection"""
    users: [UserType!]!
    colorId: UUID!
    color: ColorType!
  }
  
  type Query {
    """Fetch object from the UserType collection by id"""
    user(id: UUID!): UserType!
  
    """Fetch object from the TagType collection by id"""
    tag(id: UUID!): TagType!
  }
  
  """GraphQL type"""
  type TagType {
    name: Int!
    id: UUID!
    groupsAggregate: GroupAggregate!
  
    """Fetch objects from the GroupType collection"""
    groups: [GroupType!]!
  }
  
  scalar UUID
  
  """Aggregation fields"""
  type UserAggregate {
    count: Int
    max: UserMinMaxFields!
    min: UserMinMaxFields!
    sum: UserSumFields!
  }
  
  type UserMinMaxFields {
    name: String
  }
  
  type UserSumFields {
    name: String
  }
  
  """GraphQL type"""
  type UserType {
    name: Int!
    id: UUID!
    groupId: UUID
    group: GroupType!
    tagId: UUID
    tag: TagType!
  }
  '''
# ---
