# serializer version: 1
# name: test_query_schemas[all_fields_order_by]
  '''
  input ColorAggregateMinMaxStringFieldsOrderBy {
    name: OrderByEnum!
  }
  
  input ColorAggregateNumericFieldsOrderBy {
    name: OrderByEnum!
  }
  
  input ColorAggregateOrderBy {
    count: OrderByEnum = null
    maxString: ColorAggregateMinMaxStringFieldsOrderBy = null
    minString: ColorAggregateMinMaxStringFieldsOrderBy = null
    sum: ColorAggregateNumericFieldsOrderBy = null
  }
  
  """Ordering options"""
  input ColorOrderBy {
    fruitsAggregate: FruitAggregateOrderBy!
    fruits: FruitOrderBy = null
    name: OrderByEnum = null
    id: OrderByEnum = null
  }
  
  """GraphQL type"""
  type ColorType {
    fruitsAggregate: FruitAggregate!
  
    """Fetch objects from the FruitType collection"""
    fruits: [FruitType!]!
    name: String!
    id: UUID!
  }
  
  """Aggregation fields"""
  type FruitAggregate {
    avg: FruitNumericFields!
    count: Int
    max: FruitMinMaxFields!
    min: FruitMinMaxFields!
    stddevPop: FruitNumericFields!
    stddevSamp: FruitNumericFields!
    sum: FruitSumFields!
    varPop: FruitNumericFields!
    varSamp: FruitNumericFields!
  }
  
  input FruitAggregateMinMaxStringFieldsOrderBy {
    name: OrderByEnum!
  }
  
  input FruitAggregateNumericFieldsOrderBy {
    sweetness: OrderByEnum!
  }
  
  input FruitAggregateOrderBy {
    avg: FruitAggregateNumericFieldsOrderBy = null
    count: OrderByEnum = null
    max: FruitAggregateNumericFieldsOrderBy = null
    maxString: FruitAggregateMinMaxStringFieldsOrderBy = null
    min: FruitAggregateNumericFieldsOrderBy = null
    minString: FruitAggregateMinMaxStringFieldsOrderBy = null
    stddevPop: FruitAggregateNumericFieldsOrderBy = null
    stddevSamp: FruitAggregateNumericFieldsOrderBy = null
    sum: FruitAggregateNumericFieldsOrderBy = null
    varPop: FruitAggregateNumericFieldsOrderBy = null
    varSamp: FruitAggregateNumericFieldsOrderBy = null
  }
  
  type FruitMinMaxFields {
    name: String
    sweetness: Int
  }
  
  type FruitNumericFields {
    sweetness: Float
  }
  
  """Ordering options"""
  input FruitOrderBy {
    colorAggregate: ColorAggregateOrderBy!
    color: ColorOrderBy = null
    name: OrderByEnum = null
    colorId: OrderByEnum = null
    sweetness: OrderByEnum = null
    id: OrderByEnum = null
  }
  
  type FruitSumFields {
    name: String
    sweetness: Int
  }
  
  """GraphQL type"""
  type FruitType {
    color: ColorType!
    name: String!
    colorId: UUID
    sweetness: Int!
    id: UUID!
  }
  
  enum OrderByEnum {
    ASC
    ASC_NULLS_FIRST
    ASC_NULLS_LAST
    DESC
    DESC_NULLS_FIRST
    DESC_NULLS_LAST
  }
  
  type Query {
    """Fetch objects from the FruitType collection"""
    fruit(orderBy: [FruitOrderBy!] = null): [FruitType!]!
  }
  
  scalar UUID
  '''
# ---
